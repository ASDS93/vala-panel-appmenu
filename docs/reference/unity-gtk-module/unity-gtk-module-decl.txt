<MACRO>
<NAME>UNITY_GTK_TYPE_MENU_SHELL</NAME>
#define UNITY_GTK_TYPE_MENU_SHELL            (unity_gtk_menu_shell_get_type ())
</MACRO>
<MACRO>
<NAME>UNITY_GTK_MENU_SHELL</NAME>
#define UNITY_GTK_MENU_SHELL(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GTK_TYPE_MENU_SHELL, UnityGtkMenuShell))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_IS_MENU_SHELL</NAME>
#define UNITY_GTK_IS_MENU_SHELL(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GTK_TYPE_MENU_SHELL))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_MENU_SHELL_CLASS</NAME>
#define UNITY_GTK_MENU_SHELL_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GTK_TYPE_MENU_SHELL, UnityGtkMenuShellClass))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_IS_MENU_SHELL_CLASS</NAME>
#define UNITY_GTK_IS_MENU_SHELL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GTK_TYPE_MENU_SHELL))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_MENU_SHELL_GET_CLASS</NAME>
#define UNITY_GTK_MENU_SHELL_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GTK_TYPE_MENU_SHELL, UnityGtkMenuShellClass))
</MACRO>
<STRUCT>
<NAME>UnityGtkMenuShell</NAME>
struct _UnityGtkMenuShell
{
  GMenuModel parent_instance;

  /*< private >*/
  GtkMenuShell        *menu_shell;
  gulong               menu_shell_insert_handler_id;
  GPtrArray           *items;
  GPtrArray           *sections;
  GSequence           *visible_indices;
  GSequence           *separator_indices;
  UnityGtkActionGroup *action_group;
};
</STRUCT>
<STRUCT>
<NAME>UnityGtkMenuShellClass</NAME>
struct _UnityGtkMenuShellClass
{
  GMenuModelClass parent_class;
};
</STRUCT>
<FUNCTION>
<NAME>unity_gtk_menu_shell_get_type</NAME>
<RETURNS>GType                </RETURNS>
void 
</FUNCTION>
<FUNCTION>
<NAME>unity_gtk_menu_shell_new</NAME>
<RETURNS>UnityGtkMenuShell  * </RETURNS>
GtkMenuShell *menu_shell 
</FUNCTION>
<MACRO>
<NAME>UNITY_GTK_TYPE_ACTION_GROUP</NAME>
#define UNITY_GTK_TYPE_ACTION_GROUP            (unity_gtk_action_group_get_type ())
</MACRO>
<MACRO>
<NAME>UNITY_GTK_ACTION_GROUP</NAME>
#define UNITY_GTK_ACTION_GROUP(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GTK_TYPE_ACTION_GROUP, UnityGtkActionGroup))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_IS_ACTION_GROUP</NAME>
#define UNITY_GTK_IS_ACTION_GROUP(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GTK_TYPE_ACTION_GROUP))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_ACTION_GROUP_CLASS</NAME>
#define UNITY_GTK_ACTION_GROUP_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GTK_TYPE_ACTION_GROUP, UnityGtkActionGroupClass))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_IS_ACTION_GROUP_CLASS</NAME>
#define UNITY_GTK_IS_ACTION_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GTK_TYPE_ACTION_GROUP))
</MACRO>
<MACRO>
<NAME>UNITY_GTK_ACTION_GROUP_GET_CLASS</NAME>
#define UNITY_GTK_ACTION_GROUP_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GTK_TYPE_ACTION_GROUP, UnityGtkActionGroupClass))
</MACRO>
<STRUCT>
<NAME>UnityGtkActionGroup</NAME>
struct _UnityGtkActionGroup
{
  GObject parent_instance;

  /*< private >*/
  GActionGroup *old_group;
  gulong        old_group_action_added_handler_id;
  gulong        old_group_action_removed_handler_id;
  gulong        old_group_action_enabled_changed_handler_id;
  gulong        old_group_action_state_changed_handler_id;
  GHashTable   *actions_by_name;
  GHashTable   *names_by_radio_menu_item;
};
</STRUCT>
<STRUCT>
<NAME>UnityGtkActionGroupClass</NAME>
struct _UnityGtkActionGroupClass
{
  GObjectClass parent_class;
};
</STRUCT>
<FUNCTION>
<NAME>unity_gtk_action_group_get_type</NAME>
<RETURNS>GType                  </RETURNS>
void 
</FUNCTION>
<FUNCTION>
<NAME>unity_gtk_action_group_new</NAME>
<RETURNS>UnityGtkActionGroup  * </RETURNS>
GActionGroup        *old_group 
</FUNCTION>
<FUNCTION>
<NAME>unity_gtk_action_group_connect_shell</NAME>
<RETURNS>void                   </RETURNS>
UnityGtkActionGroup *group, UnityGtkMenuShell   *shell 
</FUNCTION>
<FUNCTION>
<NAME>unity_gtk_action_group_disconnect_shell</NAME>
<RETURNS>void                   </RETURNS>
UnityGtkActionGroup *group, UnityGtkMenuShell   *shell 
</FUNCTION>
